name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup Yarn Berry with Cache
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build application
        run: |
          set -e
          yarn build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            ./.next
            ./public
            ./package.json
            ./Dockerfile

  integration:
    runs-on: ubuntu-20.04
    needs: build

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Prepare Build Context
        run: |
          mkdir -p ./build-context
          mv .next ./build-context/.next
          mv public ./build-context/public
          mv package.json ./build-context/package.json
          mv Dockerfile ./build-context/Dockerfile

      - name: Push Docker Image to Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Docker Buildx Platform
        uses: docker/setup-buildx-action@v3
        with:
          platform: linux/arm64

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./build-context
          file: ./build-context/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ secrets.DOCKER_TAG }}

  deploy:
    runs-on: ubuntu-20.04
    needs: integration

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-actions@v4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ secrets.DOCKER_TAG }}
            docker run -d --name ${{ secrets.DOCKER_CONTAINER_NAME }} -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ secrets.DOCKER_TAG }}
